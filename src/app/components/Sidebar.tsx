"use client";

import { useEffect, useState } from "react";
import Link from "next/link";
import {
    Home,
    Info,
    Settings,
    Calendar,
    Wrench,
    Star,
    ClipboardList,
    Users,
    FileText,
    ShoppingCart,
    User,
    Warehouse,
    BookOpen,
} from "lucide-react";
import "./Sidebar.css";

export default function Sidebar() {
    const [collapsed, setCollapsed] = useState(false);
    const [role, setRole] = useState<string | null>(null);

    const toggleSidebar = () => setCollapsed(!collapsed);

    // üì¶ –ú–µ–Ω—é –ø–æ —Ä–æ–ª—è–º
    const baseMenu = [
        { label: "–ì–ª–∞–≤–Ω–∞—è", icon: <Home />, href: "/" },
        { label: "–£—Å–ª—É–≥–∏", icon: <Wrench />, href: "/services" },
        { label: "–û–Ω–ª–∞–π–Ω-–∑–∞–ø–∏—Å—å", icon: <Calendar />, href: "/booking" },
        { label: "–û—Ç–∑—ã–≤—ã", icon: <Star />, href: "/reviews" },
        { label: "–û –Ω–∞—Å", icon: <Info />, href: "/about" },
    ];

    const userMenu = [
        { label: "–õ–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç", icon: <User />, href: "/cabinet" },
        { label: "–ú–æ–∏ –∑–∞–ø–∏—Å–∏", icon: <BookOpen />, href: "/my-bookings" },
        { label: "–ù–∞—Å—Ç—Ä–æ–π–∫–∏", icon: <Settings />, href: "/settings" },
    ];

    const managerMenu = [
        { label: "–ö–∞–ª–µ–Ω–¥–∞—Ä—å", icon: <Calendar />, href: "/manager/calendar" },
        { label: "–ó–∞–∫–∞–∑—ã", icon: <ClipboardList />, href: "/manager/orders" },
        { label: "–°–æ—Ç—Ä—É–¥–Ω–∏–∫–∏", icon: <Users />, href: "/manager/staff" },
        { label: "–û—Ç—á—ë—Ç—ã", icon: <FileText />, href: "/manager/reports" },
        { label: "–ó–∞–∫–∞–∑ –¥–µ—Ç–∞–ª–µ–π", icon: <ShoppingCart />, href: "/manager/parts" },
        { label: "–ö–ª–∏–µ–Ω—Ç—ã", icon: <User />, href: "/manager/clients" },
        { label: "–°–∫–ª–∞–¥", icon: <Warehouse />, href: "/manager/storage" },
        { label: "–ù–∞—Å—Ç—Ä–æ–π–∫–∏", icon: <Settings />, href: "/settings" },
    ];

    const mechanicMenu = [
        { label: "–ö–∞–ª–µ–Ω–¥–∞—Ä—å", icon: <Calendar />, href: "/mechanic/calendar" },
        { label: "–†–µ–º–æ–Ω—Ç—ã", icon: <ClipboardList />, href: "/mechanic/repairs" },
        { label: "–ù–∞—Å—Ç—Ä–æ–π–∫–∏", icon: <Settings />, href: "/settings" },
    ];

    // üéØ –ü–æ–ª—É—á–∞–µ–º —Ä–æ–ª—å
    useEffect(() => {
        const updateRole = () => {
            const storedRole = localStorage.getItem("userRole");
            setRole(storedRole);
        };

        updateRole();

        window.addEventListener("storage", updateRole);
        window.addEventListener("roleChange", updateRole);

        const interval = setInterval(() => {
            const storedRole = localStorage.getItem("userRole");
            if (storedRole !== role) {
                setRole(storedRole);
            }
        }, 500);

        return () => {
            window.removeEventListener("storage", updateRole);
            window.removeEventListener("roleChange", updateRole);
            clearInterval(interval);
        };
    }, [role]);

    // üß© –§–æ—Ä–º–∏—Ä—É–µ–º –∏—Ç–æ–≥–æ–≤–æ–µ –º–µ–Ω—é
    let menuItems = [...baseMenu];

    if (role === "user") {
        menuItems = [...baseMenu, ...userMenu];
    } else if (role === "manager") {
        menuItems = [...baseMenu, ...managerMenu];
    } else if (role === "mechanic") {
        menuItems = [...baseMenu, ...mechanicMenu];
    }

    return (
        <div className={`sidebar ${collapsed ? "collapsed" : ""}`}>
            <button className="toggle-btn" onClick={toggleSidebar}>
                {collapsed ? "‚Üí" : "‚Üê"}
            </button>
            <nav>
                <ul>
                    {menuItems.map(({ label, icon, href }) => (
                        <li key={label}>
                            <Link href={href}>
                                <span className="icon">{icon}</span>
                                {!collapsed && <span className="label">{label}</span>}
                            </Link>
                        </li>
                    ))}
                </ul>
            </nav>
        </div>
    );
}
